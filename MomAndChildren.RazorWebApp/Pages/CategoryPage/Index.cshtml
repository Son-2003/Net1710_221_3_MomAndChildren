@page
@model MomAndChildren.RazorWebApp.Pages.CategoryPage.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<form method="get">
    <div class="form-group">
        <label for="searchTerm">Search Category:</label>
        <input style="margin: 0 15px 0 10px" type="text" class="form-control" id="searchTerm" name="searchTerm" placeholder="Enter Name or Description or Note or CreateBy or UpdateBy">
        <button type="submit" class="btn btn-primary">Search</button>
    </div>
    
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Category.First().CategoryId)
            </th>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category.First().CategoryName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category.First().Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category.First().Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category.First().Image)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category.First().Note)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category.First().CreateBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category.First().CreateAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category.First().UpdateBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category.First().UpdateAt)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Category) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                    @if (item.Status == 1)
                    {
                        <span>Active</span>
                    }
                    @if (item.Status == 0)
                    {
                        <span>Inactive</span>
                    }
               
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Image)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Note)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreateBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreateAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdateBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdateAt)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.CategoryId">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.CategoryId">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.CategoryId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Page("Index", new { currentPage = Model.CurrentPage - 1 })" tabindex="-1" aria-disabled="@(Model.CurrentPage == 1)">Previous</a>
        </li>
        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Page("Index", new { currentPage = Model.CurrentPage + 1 })">Next</a>
        </li>
    </ul>
</nav>
