@page
@model MomAndChildren.RazorWebApp.Pages.OrderDetailPage.CreateModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>OrderDetail</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="OrderDetailId" class="control-label"></label>
                <input asp-for="OrderDetailId" class="form-control" readonly />
                <span asp-validation-for="OrderDetailId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UnitPrice" class="control-label"></label>
                <input asp-for="UnitPrice" id="UnitPrice" class="form-control" readonly />
                <span asp-validation-for="UnitPrice" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TotalPrice" class="control-label"></label>
                <input asp-for="TotalPrice" id="TotalPrice" class="form-control" readonly />
                <span asp-validation-for="TotalPrice" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" id="Quantity" class="form-control" disabled />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CreateBy" class="control-label"></label>
                <input asp-for="CreateBy" class="form-control" />
                <span asp-validation-for="CreateBy" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CreateAt" class="control-label"></label>
                <input asp-for="CreateAt" class="form-control" readonly value="@DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")" />
                <span asp-validation-for="CreateAt" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UpdateBy" class="control-label"></label>
                <input asp-for="UpdateBy" class="form-control" />
                <span asp-validation-for="UpdateBy" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UpdateAt" class="control-label"></label>
                <input asp-for="UpdateAt" class="form-control" readonly value="@DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")" />
                <span asp-validation-for="UpdateAt" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="OrderId" class="control-label"></label>
                <select asp-for="OrderId" class ="form-control" asp-items="ViewBag.OrderId"></select>
            </div>
            <div class="form-group">
                <label asp-for="ProductId" class="control-label"></label>
                <select asp-for="ProductId" id="ProductId" class="form-control" asp-items="ViewBag.ProductId"></select>
            </div>
            <div class="form-group" style="margin-top: 20px">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function () {
            $('#ProductId').change(function () {
                var productId = $(this).val();
                $.ajax({
                    url: '/OrderDetailPage/Create?handler=GetProductPrice&productId=' + productId,
                    type: 'GET',
                    data: { productId: productId },
                    success: function (response) {
                        $('#UnitPrice').val(response); // Cập nhật UnitPrice khi chọn ProductId
                        $('#Quantity').prop('disabled', false);
                        calculateTotalPrice(); // Tính lại TotalPrice khi UnitPrice thay đổi
                    },
                    error: function (error) {
                        console.error('Error fetching product price:', error);
                    }
                });
            });

            function calculateTotalPrice() {
                var unitPrice = parseFloat($('#UnitPrice').val());
                var quantity = parseInt($('#Quantity').val());
                var totalPrice = unitPrice * quantity;
                $('#TotalPrice').val(totalPrice.toFixed(2)); // Cập nhật TotalPrice với 2 chữ số thập phân
            }

            $('#Quantity').on('input', function () {
                calculateTotalPrice(); // Tính lại TotalPrice khi Quantity thay đổi
            });
        });
    </script>
}


